name: Process and Deploy Digital Garden

on:
  repository_dispatch:
    types: [obsidian-update]

jobs:
  process-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do reposit√≥rio principal
      - name: üöÄ Checkout Digital Garden
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GARDEN_TOKEN }}

      # 2. Processar payload
      - name: üì• Receber Conte√∫do
        id: payload
        run: |
          echo '${{ toJSON(github.event.client_payload.notas) }}' > /tmp/notas.json
          echo "üìã Conte√∫do recebido:"
          cat /tmp/notas.json

      # 3. Limpar diret√≥rios alvo (corrigido para content/post)
      - name: üßπ Limpar Diret√≥rios
        run: |
          rm -rf content/post/*
          rm -rf static/imagens/*
          mkdir -p content/post static/imagens

      - name: üìÇ Importar Notas e Imagens (com corre√ß√£o de nomes)
        run: |
          # Clonar reposit√≥rio obsidian-vault
          if ! git clone https://${{ github.actor }}:${{ secrets.GARDEN_TOKEN }}@github.com/${{ github.repository_owner }}/obsidian-vault.git /tmp/obsidian-vault 2>/dev/null; then
            echo "::error::Reposit√≥rio obsidian-vault n√£o encontrado ou inacess√≠vel"
            exit 1
          fi

          # Fun√ß√£o slugify simples
          slugify() {
            echo "$1" |
            iconv -t ascii//TRANSLIT |
            tr -d "'\"" |
            tr '[:upper:]' '[:lower:]' |
            tr -s '[:space:][:punct:]' '-' |
            sed 's/^-//;s/-$//' |
            sed 's/[^a-z0-9\-]//g'
          }

          # Processar entradas do JSON
          jq -r '.[]' /tmp/notas.json | while read -r original; do
            if [[ "$original" == *.md ]]; then
              nome_base="$(basename "$original")"
              nome_sem_ext="${nome_base%.*}"
              slug_nome="$(slugify "$nome_sem_ext").md"
              novo_nome="content/post/$slug_nome"
              cp "/tmp/obsidian-vault/$original" "$novo_nome"

              # Corrigir imagens no conte√∫do para o shortcode Hugo
              sed -i -E 's|!\[\[(attachments/)?([^]]+)\]\]|{{< taped src="/imagens/\2" alt="\2" >}}|g' "$novo_nome"

              echo "üìÑ $original ‚Üí $novo_nome"

            elif [[ "$original" == attachments/* ]]; then
              cp "/tmp/obsidian-vault/$original" "static/imagens/$(basename "$original")"
              echo "üñºÔ∏è $(basename "$original")"
            fi
          done


      # 5. Build com Hugo
      - name: üõ†Ô∏è Instalar Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: üì¶ Gerar Site
        run: hugo --minify

      # 6. Deploy FTP
      - name: üì° FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ secrets.FTP_PATH }}
          local-dir: public/

      # 7. Atualizar reposit√≥rio
      - name: üîÑ Commitar Mudan√ßas
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add content/post static/imagens
          git diff --quiet && git diff --staged --quiet || git commit -m "Atualiza√ß√£o autom√°tica: conte√∫do do Obsidian [skip ci]"
          git push
