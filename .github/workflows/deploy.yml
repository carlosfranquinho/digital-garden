name: Deploy Digital Garden

on:
  repository_dispatch:
    types: [obsidian-update]

jobs:
  build-and-deploy:
    name: 🌱 Build & Deploy Garden
    runs-on: ubuntu-latest

    steps:
    
      - name: 🪵 Debug Ver conteúdo recebido
        run: |
          echo "Payload recebido:"
          echo '${{ toJson(github.event.client_payload.notas) }}'

      - name: 🔄 Clonar repositório Hugo (este)
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GARDEN_TOKEN }}

      - name: 🐍 Instalar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: 📦 Instalar dependências Python
        run: python3 -m pip install --upgrade pip && python3 -m pip install pyyaml python-slugify
  
      - name: 📦 Preparar lista de notas recebidas
        id: preparar
        run: |
          echo '${{ toJson(github.event.client_payload.notas) }}' > notas.json
          jq -r '.[]' notas.json > paths.txt

      - name: 🔄 Clonar apenas as notas necessárias
        run: |
          mkdir notas
          cd notas
          git init
          git remote add origin https://x-access-token:${{ secrets.GARDEN_TOKEN }}@github.com/carlosfranquinho/obsidian-vault.git
          git config core.sparseCheckout true
          mkdir -p .git/info
          cp ../paths.txt .git/info/sparse-checkout
          git pull origin main

      - name: 📦 Executar script de exportação das notas
        run: |
          python3 .github/scripts/exportar_obsidian.py --input notas.json

      - name: 📦 Commit e Push de novas notas exportadas
        env:
          GH_PAT: ${{ secrets.GARDEN_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add content/post
          git commit -m "✨ Exportar novas notas do Obsidian" || echo "Nada a commitar"
          git push https://x-access-token:${GH_PAT}@github.com/carlosfranquinho/digital-garden.git main

      - name: 🛠️ Instalar Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'

      - name: 📦 Gerar site com Hugo
        run: hugo --minify

      - name: 📡 Fazer deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ secrets.FTP_PATH }}
          local-dir: public/
