name: Process and Deploy Digital Garden

on:
  repository_dispatch:
    types: [obsidian-update]

jobs:
  process-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Baixar o reposit√≥rio principal (com o tema inclu√≠do)
      - name: üöÄ Checkout Completo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Para baixar todo o hist√≥rico (incluindo subm√≥dulos se houver)

      # 2. Clonar Obsidian Vault
      - name: üì• Clonar Vault
        run: |
          git clone https://${{ github.actor }}:${{ secrets.GARDEN_TOKEN }}@github.com/${{ github.repository_owner }}/obsidian-vault.git /tmp/obsidian-vault
          echo '${{ toJSON(github.event.client_payload.notas) }}' > /tmp/notas.json

      # 3. Limpeza Segura (preserva temas e configura√ß√µes)
      - name: üßπ Limpar Conte√∫do Antigo
        run: |
          # Mant√©m estrutura essencial
          find . -mindepth 1 \( \
             -name '.git' \
             -o -name '.github' \
             -o -name 'config.toml' \
             -o -name 'themes' \
             -o -name 'static' \
          \) -prune -o -exec rm -rf {} +
          
          # Recria diret√≥rios necess√°rios
          mkdir -p content/posts static/imagens

      # 4. Processar Arquivos
      - name: üìÇ Copiar Conte√∫do
        run: |
          slugify() {
            echo "$1" | 
            iconv -t ascii//TRANSLIT |
            tr -d "'\"" |
            tr -s '[:space:][:punct:]' '-' |
            tr '[:upper:]' '[:lower:]' |
            sed 's/-$//;s/^-//;s/[^a-z0-9\-]//g'
          }

          while IFS= read -r original; do
            if [[ "$original" == *.md ]]; then
              novo_nome="content/posts/$(slugify "$original")"
              mkdir -p "$(dirname "$novo_nome")"
              cp "/tmp/obsidian-vault/$original" "$novo_nome"
              sed -i -E 's|!\[\[(attachments/)?([^]]+)\]\]|![](/imagens/\2)|g' "$novo_nome"
              echo "üìÑ $original ‚Üí $novo_nome"

            elif [[ "$original" == attachments/* ]]; then
              cp "/tmp/obsidian-vault/$original" "static/imagens/$(basename "$original")"
              echo "üñºÔ∏è $(basename "$original")"
            fi
          done < <(jq -r '.[]' /tmp/notas.json)

      # 5. Verificar Estrutura (DEBUG)
      - name: üîç Verificar Arquivos
        run: |
          echo "=== Estrutura Final ==="
          find . -maxdepth 3 -not -path './.git/*'
          echo "=== Tema ==="
          ls -la themes/github-style

      # 6. Build Hugo
      - name: üõ†Ô∏è Instalar Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: üì¶ Construir Site
        run: |
          hugo --minify --source .

      # 7. Deploy
      - name: üì° FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ secrets.FTP_PATH }}
          local-dir: public/
