name: Process and Deploy Digital Garden

on:
  repository_dispatch:
    types: [obsidian-update]  # Alterado para corresponder ao seu trigger

jobs:
  process-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: 🚀 Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📥 Process payload data
        id: payload
        run: |
          # Adaptado para o formato do obsidian-vault (client_payload.notas)
          FILES='${{ toJSON(github.event.client_payload.notas) }}'
          echo "files=${FILES}" >> $GITHUB_OUTPUT
          echo "$FILES" > filelist.txt
          echo "📋 Ficheiros recebidos: ${FILES}"

      - name: � Clean up directories
        run: |
          rm -rf content/posts/*
          rm -rf static/images/*
          mkdir -p content/posts
          mkdir -p static/images

      - name: 📂 Copy files from obsidian-vault
        env:
          FILES: ${{ steps.payload.outputs.files }}
        run: |
          git clone https://github.com/${{ github.repository_owner }}/obsidian-vault.git /tmp/obsidian-vault
          
          # Processar cada ficheiro
          jq -r '.[]' filelist.txt | while read -r file; do
            if [[ "$file" == *.md ]]; then
              mkdir -p "content/posts/$(dirname "$file")"
              cp "/tmp/obsidian-vault/$file" "content/posts/$file"
              sed -i 's|!\[\[attachments/|![](/images/|g' "content/posts/$file"
              echo "📄 Copiada nota: $file"
            elif [[ "$file" == attachments/* ]]; then
              filename=$(basename "$file")
              cp "/tmp/obsidian-vault/$file" "static/images/$filename"
              echo "🖼️ Copiada imagem: $filename"
            fi
          done

      # [Mantém os passos existentes de Hugo e FTP abaixo]
      - name: 🛠️ Instalar Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: 📦 Gerar site com Hugo
        run: hugo --minify

      - name: 📡 Fazer deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ secrets.FTP_PATH }}
          local-dir: public/
