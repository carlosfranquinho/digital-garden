name: Process and Deploy Digital Garden

on:
  repository_dispatch:
    types: [obsidian-update]

jobs:
  process-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üöÄ Checkout repo
        uses: actions/checkout@v4

      - name: üì• Process payload
        id: payload
        run: |
          echo '${{ toJSON(github.event.client_payload.notas) }}' > notas.json
          echo "üìã Lista de arquivos recebida:"
          cat notas.json

      - name: üßπ Limpar diret√≥rios
        run: |
          rm -rf content/posts/*
          rm -rf static/imagens/*
          mkdir -p content/posts
          mkdir -p static/imagens

      - name: üìÇ Processar arquivos
        run: |
          # Fun√ß√£o de slugifica√ß√£o melhorada
          slugify() {
            echo "$1" | 
            iconv -t ascii//TRANSLIT |
            tr -d "'\"" |
            tr -s '[:space:][:punct:]' '-' |
            tr '[:upper:]' '[:lower:]' |
            sed 's/-$//;s/^-//;s/[^a-z0-9\-]//g'
          }

          # Clonar reposit√≥rio fonte
          git clone https://${{ github.actor }}:${{ secrets.GARDEN_TOKEN }}@github.com/${{ github.repository_owner }}/obsidian-vault.git /tmp/obsidian-vault

          # Processar cada arquivo
          jq -r '.[]' notas.json | while read -r original; do
            if [[ "$original" == *.md ]]; then
              # Slugificar caminho completo
              dirpath=$(dirname "$original" | slugify)
              filename=$(basename "$original" .md | slugify)
              new_path="content/posts/${dirpath}/${filename}.md"
              
              # Criar diret√≥rio e copiar arquivo
              mkdir -p "$(dirname "$new_path")"
              cp "/tmp/obsidian-vault/$original" "$new_path"
              
              # Atualizar links de imagens
              sed -i -E 's|!\[\[(attachments/)?([^]]+)\]\]|![](/imagens/\2)|g' "$new_path"
              echo "üìÑ Nota processada: $original ‚Üí $new_path"

            elif [[ "$original" == attachments/* ]]; then
              # Copiar imagem mantendo nome original (sem slug)
              filename=$(basename "$original")
              cp "/tmp/obsidian-vault/$original" "static/imagens/$filename"
              echo "üñºÔ∏è Imagem copiada: $filename"
            fi
          done

      - name: üõ†Ô∏è Instalar Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: üì¶ Gerar site com Hugo
        run: hugo --minify

      - name: üì° Fazer deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ secrets.FTP_PATH }}
          local-dir: public/
